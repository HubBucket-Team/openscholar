<?php

/**
 * @file
 * Hook implementations for the os module.
 */

use Drupal\bibcite_entity\Entity\ReferenceInterface;
use Drupal\Core\Link;
use Drupal\Core\Session\AccountInterface;
use Drupal\media\MediaInterface;

/**
 * Implements hook_library_info_alter().
 */
function os_library_info_alter(&$libraries, $extension) {
  if ($extension == 'core') {
    return;
  }

  /** @var \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler */
  $moduleHandler = \Drupal::service('module_handler');

  // Filter out themes and profiles or whatever. only modules.
  if (!$moduleHandler->moduleExists($extension)) {
    return;
  }
  $path = drupal_get_path('module', $extension);

  foreach ($libraries as $name => &$lib) {
    if (isset($lib['paths'])) {
      if (strpos($lib['paths'], '/') === 0) {
        $lib['drupalSettings']['paths'][$name] = ltrim($lib['paths'], '/') . '/';
      }
      else {
        $lib['drupalSettings']['paths'][$name] = $path . '/' . $lib['paths'] . '/';
      }
    }
  }
}

/**
 * Implements hook_preprocess_html().
 */
function os_preprocess_html(&$variables) {
  /** @var \Drupal\os\AngularModuleManagerInterface $ngModuleManager */
  $ngModuleManager = \Drupal::service('angular.module_manager');
  if ($modules = $ngModuleManager->getModules()) {
    $variables['attributes']['ng-app'] = 'openscholar';
    $variables['attributes']['data-ng-modules'] = implode(',', $modules);
    $variables['#attached']['library'][] = 'os/openscholarModule';
  }
}

/**
 * Implements hook_preprocess_block().
 *
 * Replaces 'Drupal' with 'OpenScholar' in the powered by block.
 */
function os_preprocess_block(array &$vars) {
  if (isset($vars['plugin_id']) && $vars['plugin_id'] == 'system_powered_by_block') {
    $vars['content']['#markup'] = '';
    if (\Drupal::currentUser()->isAnonymous()) {
      $vars['content']['#markup'] .= Link::createFromRoute(t('Admin Login'), 'user.login', [], ['query' => \Drupal::destination()->getAsArray()])->toString();
    }
    $vars['content']['#markup'] .= t('<span id="powered-by">Powered by <a href=":link">OpenScholar</a></span>', [':link' => 'https://theopenscholar.com/']);
  }
}

/**
 * Implements hook_entity_create_access().
 *
 * Handles entity create inside group via global paths:
 * - `/node/add/<bundle>`
 * - `/media/add/<bundle>`
 * - `/bibcite/reference/add/<bundle>`
 */
function os_entity_create_access(AccountInterface $account, array $context, $entity_bundle) {
  $plugin_id = "group_entity:{$context['entity_type_id']}";

  // Nodes follow a different plugin_id structure.
  if ($context['entity_type_id'] === 'node') {
    $plugin_id = "group_node:$entity_bundle";
  }

  /** @var \Drupal\os\AccessHelperInterface $access_helper */
  $access_helper = \Drupal::service('os.access_helper');

  return $access_helper->checkCreateAccess($account, $plugin_id);
}

/**
 * Implements hook_ENTITY_TYPE_access().
 */
function os_media_access(MediaInterface $entity, $operation, AccountInterface $account) {
  /** @var \Drupal\os\AccessHelperInterface $access_helper */
  $access_helper = \Drupal::service('os.access_helper');

  return $access_helper->checkAccess($entity, $operation, $account);
}

/**
 * Implements hook_ENTITY_TYPE_access().
 */
function os_bibcite_reference_access(ReferenceInterface $entity, $operation, AccountInterface $account) {
  /** @var \Drupal\os\AccessHelperInterface $access_helper */
  $access_helper = \Drupal::service('os.access_helper');

  return $access_helper->checkAccess($entity, $operation, $account);
}
