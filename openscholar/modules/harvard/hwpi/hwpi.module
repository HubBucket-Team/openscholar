<?php

/**
 * List of Harvard documentation help link
 */

variable_set('help_redirect_url', 'http://docs.openscholar.harvard.edu/global-site-settings#url-redirects');
variable_set('one_page_theme_url', 'http://docs.openscholar.harvard.edu/one-page-themes');
variable_set('help_key_link', 'http://docs.openscholar.harvard.edulogging-your-site#linking-your-harvardkey-to-your-openscholar-account');
variable_set('help_booklet_url', 'http://docs.openscholar.harvard.edu/booklet#booklet-app-settings');
variable_set('dataverse_default_url', 'https://dataverse.harvard.edu/');
variable_set('help_dataverse_widget_url', 'http://docs.openscholar.harvard.edu/dataverse-dataset-widget');
variable_set('help_dataverse_citation_url', 'http://docs.openscholar.harvard.edu/dataverse-dataset-citation');
variable_set('help_dataverse_list_url', 'http://docs.openscholar.harvard.edu/dataverse-list-widget');
variable_set('help_dataverse_search_box_url', 'http://docs.openscholar.harvard.edu/dataverse-search-box');
variable_set('help_events_url', 'http://docs.openscholar.harvard.edu/events-app#events-app-settings');
variable_set('help_faq_url', 'http://docs.openscholar.harvard.edu/faq-app#faq-app-settings');
variable_set('help_private_files_url', 'http://docs.openscholar.harvard.edu/private-files#setting-options');
variable_set('help_links_url', 'http://docs.openscholar.harvard.edu/links-app#link-app-settings');
variable_set('doc_base_url', 'http://docs.openscholar.harvard.edu');
variable_set('help_site_visibility_url', 'http://docs.openscholar.harvard.edu/global-site-settings#site-visibility');
variable_set('help_custom_domain_url', 'http://docs.openscholar.harvard.edu/apply-a-custom-domain');
variable_set('help_subsite_theme_url', 'http://docs.openscholar.harvard.edu/subsite-themes');
variable_set('help_search_engine_optimization_url', 'http://docs.openscholar.harvard.edu/global-site-settings#search-engine-optimization');
variable_set('help_favicon_url', 'http://docs.openscholar.harvard.edu/adding-site-favicon');
variable_set('help_breadcrumbs_url', 'http://docs.openscholar.harvard.edu/enable-breadcrumbs');
variable_set('help_blog_comments_url', 'http://docs.openscholar.harvard.edu/blogs#blog-settings');
variable_set('help_analytics_url', 'http://docs.openscholar.harvard.edu/global-site-settings#google-analytics');
variable_set('help_long_list_url', 'http://docs.openscholar.harvard.edu/global-site-settings#long-list-display');
variable_set('help_publications_url', 'https://docs.openscholar.harvard.edu/publications-settings');
variable_set('help_taxonomy_url', 'http://docs.openscholar.harvard.edu/categorizing-your-content-taxonomy');
variable_set('privacy_policy_url', 'http://docs.openscholar.harvard.edu/global-site-settings#privacy-policy');
variable_set('help_site_login_url', 'http://docs.openscholar.harvard.edu/logging-your-site');





/**
 * List of Harvard path related documentation help link
 */

variable_set('help_cp_appearance_url', 'http://docs.openscholar.harvard.edu/managing-look-your-site');
variable_set('help_cp_build_url', 'http://docs.openscholar.harvard.edu/content-apps-and-widgets');
variable_set('help_cp_build_layout_url', 'http://docs.openscholar.harvard.edu/customizing-your-site-layout');
variable_set('help_cp_build_menu_url', 'http://docs.openscholar.harvard.edu/menus');
variable_set('help_cp_build_taxonomy_url', 'http://docs.openscholar.harvard.edu/categorizing-your-content-taxonomy');
variable_set('help_cp_content_files_url', 'http://docs.openscholar.harvard.edu/file-management');
variable_set('help_cp_settings_url', 'http://docs.openscholar.harvard.edu/site-settings');
variable_set('help_cp_support_url', 'http://hwp.harvard.edu/pages/support');

/**
 * List of Harvard app related documentation help link
 */

variable_set('help_os_news_url', 'http://docs.openscholar.harvard.edu/import-news-rss');
variable_set('help_os_biocv_url', 'http://docs.openscholar.harvard.edu/biocv');
variable_set('help_os_blog_url', 'http://docs.openscholar.harvard.edu/blog');
variable_set('help_os_booklets_url', 'http://docs.openscholar.harvard.edu/booklet');
variable_set('help_os_classes_url', 'http://docs.openscholar.harvard.edu/classes');
variable_set('help_os_events_url', 'http://docs.openscholar.harvard.edu/events-app');
variable_set('help_os_faq_url', 'http://docs.openscholar.harvard.edu/faq-app');
variable_set('help_os_files_private_url', 'http://docs.openscholar.harvard.edu/private-files');
variable_set('help_os_pages_url', 'http://docs.openscholar.harvard.edu/pages');
variable_set('help_os_image_gallery', 'http://docs.openscholar.harvard.edu/image-management');
variable_set('help_os_links_url', 'http://docs.openscholar.harvard.edu/links');
variable_set('help_os_profiles_url', 'http://docs.openscholar.harvard.edu/people-profiles');
variable_set('help_os_publications_url', 'http://docs.openscholar.harvard.edu/publications');
variable_set('help_os_presentations_url', 'http://docs.openscholar.harvard.edu/presentations');
variable_set('help_os_reader_url', 'http://docs.openscholar.harvard.edu/rss-feed');
variable_set('help_os_software_url', 'http://docs.openscholar.harvard.edu/software');

/**
 * List of Harvard widget related documentation help link
 */
variable_set('help_os_custom_texthtml_url', 'http://docs.openscholar.harvard.edu/custom-texthtml-widget');
variable_set('help_os_taxonomy_fbt_url', 'http://docs.openscholar.harvard.edu/taxonomy-widget');
variable_set('help_os_featured_posts_url', 'http://docs.openscholar.harvard.edu/featured-posts-widget');
variable_set('help_os_search_solr_more_url', 'http://docs.openscholar.harvard.edu/more');
variable_set('help_os_sv_list_box_url', 'http://docs.openscholar.harvard.edu/list-of-posts-widget');
variable_set('help_os_sv_list_file_url', 'http://docs.openscholar.harvard.edu/list-files');
variable_set('help_os_feedreader_url', 'http://docs.openscholar.harvard.edu/feed-reader-widget');
variable_set('help_os_pub_year_url', 'http://docs.openscholar.harvard.edu/publications-year-widget');
variable_set('help_os_booktoc_url', 'http://docs.openscholar.harvard.edu/booklet-table-contents-widget');
variable_set('help_os_pub_author_url', 'http://docs.openscholar.harvard.edu/publications-authors-widget');
variable_set('help_os_pub_types_url', 'http://docs.openscholar.harvard.edu/publications-types-widget');
variable_set('help_os_slideshow_url', 'http://docs.openscholar.harvard.edu/photo-slideshow-widget');
variable_set('help_os_embed_media_url', 'http://docs.openscholar.harvard.edu/embed-media-widget');
variable_set('help_os_rss_feed_url', 'http://docs.openscholar.harvard.edu/rss-feed-widget');
variable_set('help_os_mailchimp_url', 'http://docs.openscholar.harvard.edu/embedding-mailchimp-newsletter-sign');
variable_set('help_os_follow_me_url', 'http://docs.openscholar.harvard.edu/follow-me-widget');
variable_set('help_os_twitter_url', 'http://docs.openscholar.harvard.edu/twitter-widget');
variable_set('help_os_bio_url', 'http://docs.openscholar.harvard.edu/bio-widget');
variable_set('help_os_addthis_url', 'http://docs.openscholar.harvard.edu/addthis-widget');
variable_set('help_os_accordion_url', 'http://docs.openscholar.harvard.edu/accordion-widget');
variable_set('help_os_tabs_url', 'http://docs.openscholar.harvard.edu/tabs-widget');
variable_set('help_os_random_url', 'http://docs.openscholar.harvard.edu/random-widget');
variable_set('help_os_slider_url', 'http://docs.openscholar.harvard.edu/widget-slider');
variable_set('help_os_columns_url', 'http://docs.openscholar.harvard.edu/columns-widget');
variable_set('help_os_facetapi_url', 'http://docs.openscholar.harvard.edu/filtering-content-faceted-taxonomy-widget');
variable_set('help_os_filtered_search_url', 'http://docs.openscholar.harvard.edu/filtered-search-widget');
variable_set('help_os_dataverse_dataset_url', 'http://docs.openscholar.harvard.edu/dataverse-dataset-widget');
variable_set('help_os_dataverse_citation_url', 'http://docs.openscholar.harvard.edu/dataverse-dataset-citation');
variable_set('help_os_dataverse_list_url', 'http://docs.openscholar.harvard.edu/dataverse-list-widget');
variable_set('help_os_dataverse_search_url', 'http://docs.openscholar.harvard.edu/dataverse-search-box');

/**
 * Harvard  upcoming events
 */
variable_set('upcoming_events', 'http://hwp.harvard.edu/calendar/upcoming');

/**
 * Dataverse URLs
 */
variable_set('old_dataverse_url', 'http://dvn.iq.harvard.edu/');
variable_set('modified_dataverse_url', 'http://thedata.harvard.edu/');

/**
 * Harvard sitewide name,URL
 */
variable_set('sitewide_name', 'Harvard Web Publishing');
variable_set('university_base_url', 'http://www.harvard.edu/');
variable_set('university_url', 'http://hwp.harvard.edu/');
variable_set('contact_url', 'http://hwp.harvard.edu/contact');
variable_set('site_url', 'http://openscholar.harvard.edu');
variable_set('support_training_url', 'http://hwp.harvard.edu/pages/support#main-content');
variable_set('site_access', 'http://accessibility.harvard.edu/');
variable_set('copyright_infring', 'http://www.harvard.edu/reporting-copyright-infringements');

/**
 * Implements hook_init
 */
function hwpi_init() {
  global $conf, $is_https;

  // Is securepages enabled?
  // If we are not on a harvard domain turn it off.
  if (variable_get('securepages_enable', 0)) {

    //Turn SSL off for pages that don't match the wildcard certificate
    $conf['securepages_enable'] = 0;

    // Loop through the domains that are configured to work with our SSL certificate
    foreach (variable_get('hwpi_ssl_domains',array()) as $domain) {
      $offset = (strlen($domain) * -1);
      // Check to see if the current domain matches one of our wildcard domains in the SSL cert.
      // IF the cert has ".harvard.edu" then "foo.harvard.edu" is valid and we should enable, whild "bar.foo.harvard.edu" is not.
      if(substr($_SERVER['HTTP_HOST'],$offset) == $domain && !strrpos($_SERVER['HTTP_HOST'],".",($offset-1))){
        //We found a Match
        $conf['securepages_enable'] = 1;
        break;
      }
    }

    // We were unable to find a domain that matches our SSL cert.
    if (!$conf['securepages_enable'] && $is_https) {
      // Redirect to insecure.
      securepages_goto(FALSE);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for page.
 */
function hwpi_preprocess_page(&$vars) {
  if (_is_hwpi_theme()) {
    $vars['page']['branding_header']['hwpi'] = _hwpi_branding_header();
    $vars['page']['branding_footer']['hwpi'] = _hwpi_branding_footer();
  }
}

/**
 * Returns if the active theme uses hwpi_basetheme as one of it's base theme.
 *
 * @return bool
 */
function _is_hwpi_theme($theme_name = NULL) {
  if (is_null($theme_name)) {
    $theme_name = $GLOBALS['theme'];
  }
  $themes = list_themes();
  if (isset($themes[$theme_name])) {
    $t = $themes[$theme_name];
    if (isset($t->base_themes) && isset($t->base_themes['hwpi_basetheme'])) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Returns a build array for the HWPI branding header page region.
 *
 * @return array
 */
function _hwpi_branding_header() {
  $header = array();
  $header['left_container'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(
        'branding-left',
      ),
    ),
    'img' => array(
      '#theme' => 'link',
      '#path' => variable_get('university_base_url');,
      '#text' => theme('image', array('path' => drupal_get_path('theme', 'hwpi_basetheme') . '/images/harvard-logo.png', 'width' => 235, 'height' => 32, 'alt' => 'University Logo')),
      '#options' => array(
        'external' => TRUE,
        'html' => TRUE,
        'attributes' => array(),
      ),
    ),
  );
  $sites = _hwpi_get_ancestry();
  $links = array();
  foreach ($sites as $path => $title) {
    $links[] = l($title, $path);
  }
  $header['right_container'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(
        'branding-right',
      ),
    ),
    'sitecrumbs' => array(
      '#type' => 'markup',
      '#markup' => implode(' | ', $links),
    ),
  );

  return $header;
}

/**
 * Returns website parents in an ordered, keyed array.
 *
 * Note: The returned array uses URLs as keys, and case-sensitive titles as
 * values. The top-most level of the array is hard-coded to be 'HARVARD.EDU',
 * site organization taxonomy terms are second-highest, and sub-site relations
 * will appear as the most-specific, lowest-level ancestor.
 *
 * @return array
 *   An array keyed by fully-qualified absolute URLs, values are link title text.
 */
function _hwpi_get_ancestry() {
  $sites = array();
  if ($vsite = spaces_get_space()) {
    // First, looks for parent vsites and adds them to hierarchy.
    $vsite_original = $vsite;
    $group = $vsite->group;
    while (isset($group->field_group_parent) && $group->field_group_parent) {
      $items = field_get_items('node', $group, 'field_group_parent');
      $vsite = vsite_get_vsite($items[0]['target_id']);
      if(!is_object($vsite) || !isset($vsite->group)) {
        break;
      }
      $group = $vsite->group;
      $sites[$vsite->get_absolute_url()] = $group->title;
    }

    // Then, looks for site organization terms and adds them to hierarchy.
    $items = field_get_items('node', $vsite_original->group, 'field_organization');
    if (is_array($items) && !empty($items)) {
      $tid = $items[0]['tid'];
      $items = field_get_items('taxonomy_term', taxonomy_term_load($tid), 'field_site_url');
      if (isset($items[0])) {
        $site_url = $items[0];
        while ($site_url) {
          $sites[$site_url['url']] = $site_url['title'];
          $parents = taxonomy_get_parents($tid);
          if (empty($parents)) {
            break;
          }
          $tid = array_shift(array_keys($parents));
          $items = field_get_items('taxonomy_term', taxonomy_term_load($tid), 'field_site_url');
          if (isset($items[0])) {
            $site_url = $items[0];
          }
          else {
            $site_url = FALSE;
          }
        }
      }
    }
  }

  // Hard-codes "HARVARD.EDU" as the highest parent item.
  $sites[variable_get('university_base_url')] = 'HARVARD.EDU';
  return $sites;
}

/**
 * Returns a build array for the standard branding footer region (copyright).
 *
 * @return array
 *   A build array ready to render footer info.
 */
function _hwpi_branding_footer() {
  $footer = array();
  $footer['hwpi_container'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(
        'copyright',
      ),
    ),
    'copyright' => array(
      '#markup' => t('<span class="harvard-copyright">Copyright &copy; @year The President and Fellows of Harvard College</span> !privacy | !access | !copyinfring', array(
          '!privacy' => variable_get('privacy_policy','')?'| '.l('Privacy', variable_get('privacy_policy')): '',
          '!access' => l('Accessibility', variable_get('site_access')),
          '!copyinfring' => l('Report Copyright Infringement', variable_get('copyright_infring')),
          '@year' => date('Y'),
        )),
    ),
  );

  return $footer;
}

/**
 * Implements hook_cp_settings().
 */
function hwpi_cp_settings() {
  // For non-user-1, only adds the responsive setting for HWPI-themed sites.
  $theme = variable_get('theme_default');

  if (!_is_hwpi_theme($theme)) {
    return;
  }

  $settings = array(
    'privacy_policy' => array(
      'group' => array(
        '#title' => t('Privacy Policy'),
        '#id' => 'privacy-policy',
        '#help_link' => l(t('Learn more about creating a privacy policy for your site'), variable_get('privacy_policy_url'), array('attributes' => array('target' => '_blank'))),
      ),
      'form' => array(
        '#type' => 'textfield',
        '#default_value' => variable_get('privacy_policy', ''),
        '#title' => t('Privacy Policy URL'),
        '#description' => t('Enter the URL to the privacy policy you wish to use for your site. Can be a link to a post on your own site.'),
      ),
    ),
  );

  return $settings;
}

/**
 * Implements hook_block_view_alter().
 *
 * Hides the search bar title display.
 */
function hwpi_block_view_alter(&$render, $block) {
  if ($block->delta == 'site-search' && _is_hwpi_theme()) {
    unset($render['content']['search_block_form']['#title_display']);
  }
}

/**
 * Implements hook_node_insert().
 */
function hwpi_node_insert($node) {
  // Only continues if the new node is an OG group type.
  if (!og_is_group_type('node', $node->type)) {
    return;
  }

  $vsite = vsite_get_vsite($node->nid);

  if (module_exists('salesforce')) {
    //PURL is needed but spaces_og_node_insert may not have fired yet
    if (!isset($vsite->group->purl) && is_array($node->purl) && !empty($node->purl['value'])) {
      $vsite->group->purl = $node->purl['value'];
    }

    module_load_include('inc', 'hwpi', 'includes/salesforce');
    hwpi_salesforce_impl_project_create($vsite, $vsite->group->uid);
    hwpi_salesforce_support_project_create($vsite, $vsite->group->uid);
  }

  // Only continues to alter settings if the site's theme is HWPI.
  $theme = $vsite->controllers->variable->get('theme_default');
  if (!_is_hwpi_theme($theme)) {
    return;
  }

  // Sets all HWPI-theme-specific variable defaults.
  hwpi_theme_set_defaults();
}

/**
 * Implements hook_form_FORM_ID_alter() for cp_appearance_theme_picker_form.
 */
function hwpi_form_cp_appearance_theme_picker_form_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'hwpi_theme_picker_form_submit';
}

/**
 * Submit callback for cp_appearance_theme_picker_form.
 */
function hwpi_theme_picker_form_submit($form, &$form_state) {
  // Only continues if a theme value is set.
  if (!isset($form_state['values']['theme_default'])) {
    return;
  }

  // Only continues if the selected theme is HWPI.
  $selected_theme = $form_state['values']['theme_default'];
  if (!_is_hwpi_theme($selected_theme)) {
    return;
  }

  // Sets all HWPI-theme-specific variable defaults.
  hwpi_theme_set_defaults();
}

/**
 * Sets all HWPI-theme-specific variable defaults.
 *
 * @see hwpi_form_cp_appearance_theme_picker_form_alter()
 * @see
 */
function hwpi_theme_set_defaults() {
  // Declares settings specific to HWPI themes.
  $settings = array(
    'os_breadcrumbs_show_breadcrumbs' => 1,
    'enable_responsive' => 1,
  );

  // Sets all HWPI-theme-specific settings.
  foreach ($settings as $name => $value) {
    if ($space = spaces_get_space()) {
      $space->controllers->variable->set($name, $value);
    }
    else {
      variable_set($name, $value);
    }
  }
}

/**
 * Implements hook_vsite_register_notify_author_body_text_alter().
 *
 * The string must be UTF-8 compliant. Which is why the wierd A's are in there.
 */
function hwpi_vsite_register_notify_author_body_text_alter(&$body_text) {

  global $base_url;

  $body_text = "Hi !username,\n\n"
    . "Congratulations! Your new website !site_url has been activated, and you can log "
    . "into your site at !site_uri with the username !username. "
    . "Don't forget to bookmark your new site and save this email for future reference.\n"
    . "\n"
    . "Here are some handy links for you:\n"
    . "\n"
    . " * Logging in to your site: " . variable_get('help_site_login_url') . "\n"
    . " * Sign up for training: " . variable_get('upcoming_events') . "\n"
    . " * OpenScholar documentation: " . variable_get('doc_base_url') . "\n"
    . " * Need help with your project?" . variable_get('university_url') . "\n"
    . "\n"
    . "Sincerely,\n"
    . variable_get('university_url'). "\n";
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function hwpi_form_user_login_alter(&$form, $form_state) {
  $form['message'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(
        'user-login-message-text',
      )
    ),
    'message-text' => array(
      '#markup' => t('!roadmap-link for the latest new feature and bug fix information.', array(
        '!roadmap-link' => l('Visit our roadmap', 'http://theopenscholar.org/roadmap')
      ))
    )
  );
}
