<?php

use Drupal\block\Entity\Block;

/**
 * Implements hook_preprocess_HOOK().
 */
function os_widgets_preprocess_block(&$variables) {
  // Blocks coming from page manager widget does not have id.
  if (empty($variables['elements']['#id'])) {
    return;
  }
  /** @var Block $block */
  $block = Block::load($variables['elements']['#id']);

  /** @var \Drupal\block_content\Entity\BlockContent $blockContent */
  $blockContent = _os_widgets_get_block_content_by_block($block, 'featured_posts');

  if (!empty($blockContent)) {
    $displayStyleValues = $blockContent->get('field_display_style')->getValue();
    $displayStyle = $displayStyleValues[0]['value'];
    $viewBuilder = \Drupal::entityTypeManager()->getViewBuilder('node');
    /** @var  $fieldItemsList \Drupal\Core\Field\EntityReferenceFieldItemList */
    $fieldItemsList = $variables['content']['field_featured_posts']['#items'];
    $referencedEntities = $fieldItemsList->referencedEntities();
    $hideTitleValues = $blockContent->get('field_hide_title')->getValue();
    if ($displayStyle != 'title') {
      /**
       * @var  $delta int
       * @var  $node \Drupal\node\Entity\Node
       */
      foreach ($referencedEntities as $delta => $node) {
        $build = $viewBuilder->view($node, $displayStyle);
        $build['os_widgets_hide_node_title'] = !empty($hideTitleValues[0]['value']) ? true : false;
        $variables['content']['field_featured_posts'][$delta] = $build;
      }
    }
    $isRandomValues = $blockContent->get('field_is_random')->getValue();
    if (!empty($isRandomValues[0]['value'])) {
      $displayedDelta = array_rand($referencedEntities);
      foreach ($referencedEntities as $delta => $node) {
        if ($displayedDelta != $delta) {
          // Hide other referenced entity
          $variables['content']['field_featured_posts'][$delta]['#access'] = false;
        }
      }
    }
    $isStyledValues = $blockContent->get('field_is_styled')->getValue();
    if (!empty($isStyledValues[0]['value'])) {
      $variables['attributes']['class'][] = 'styled';
    }
  }
}

function _os_widgets_get_block_content_by_block(Block $block, $blockContentBundle) {
  $blockContentId = $block->getPlugin()->getDerivativeId();
  if (empty($blockContentId)) {
    return false;
  }
  $blockContent = \Drupal::entityTypeManager()->getStorage('block_content')->loadByProperties(['uuid' => $blockContentId]);
  if (empty($blockContent)) {
    return false;
  }
  $blockContent = reset($blockContent);
  $currentBlockContentBundle = $blockContent->bundle();
  if ($currentBlockContentBundle != $blockContentBundle) {
    return false;
  }
  return $blockContent;
}

/**
 * Implements hook_preprocess_node().
 */
function os_widgets_preprocess_node(&$variables) {
  if (!empty($variables['elements']['os_widgets_hide_node_title'])) {
    $variables['label']['#access'] = false;
  }
}

