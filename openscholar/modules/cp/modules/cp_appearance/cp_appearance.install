<?php

/**
 * @file
 * Install file for the CP appearance.
 */

/**
 * Implements hook_requirements().
 */
/*
function cp_appearance_requirements() {
  if (!function_exists('libraries_get_libraries')) {
    return array();
  }
  $libraries = libraries_get_libraries();

  if (!in_array('git', array_keys($libraries))) {
    $requirements['git_library_missing'] = array(
      'title' => t('GIT wrapper'),
      'value' => t("The <a href='@url'>GIT wrapper</a> library is missing. Downaload the library and placed it under @path", array(
        '@url' => 'https://github.com/cpliakas/git-wrapper',
        '@path' => drupal_get_path('profile', drupal_get_profile()) . '/libraries/git'
      )),
      'severity' => REQUIREMENT_ERROR,
    );

    return $requirements;
  }

  $s = db_select('spaces_overrides', 'so')
    ->fields('so')
    ->condition('object_id', 'flavors')
    ->condition('object_type', 'variable')
    ->execute();

  foreach ($s as $r) {
    $value = unserialize($r->value);
    foreach ($value as $k => $flavor) {
      $value[$k]['path'] = preg_replace('|^files|', 'public:/', $flavor['path']);
    }
    db_update('spaces_overrides')
      ->fields(array(
        'value' => serialize($value),
      ))
      ->condition('object_id', $r->object_id)
      ->condition('object_type', $r->object_type)
      ->condition('id', $r->id)
      ->execute();
  }
  if (!file_exists(libraries_get_path('git') . '/autoload.php')) {
    $requirements['git_class_missing'] = array(
      'title' => t('GIT wrapper'),
      'value' => t("The GIT wrapper class is missing. You watch the <a href='@url'>documentation</a> for understading how to install the class.", array(
        '@url' => 'https://github.com/cpliakas/git-wrapper#installation',
      )),
      'severity' => REQUIREMENT_ERROR,
    );

    return $requirements;
  }
}
 */


/**
 * Fixes paths in custom themes
 */
function cp_appearance_update_7001() {
  $s = db_select('spaces_overrides', 'so')
    ->fields('so')
    ->condition('object_id', 'flavors')
    ->condition('object_type', 'variable')
    ->execute();

  foreach ($s as $r) {
    $value = unserialize($r->value);
    foreach ($value as $k => $flavor) {
      $value[$k]['path'] = preg_replace('|^files|', 'public:/', $flavor['path']);
    }
    db_update('spaces_overrides')
      ->fields(array(
        'value' => serialize($value),
      ))
      ->condition('object_id', $r->object_id)
      ->condition('object_type', $r->object_type)
      ->condition('id', $r->id)
      ->execute();
  }

  return t('All custom themes have been set to use a relative path');
}