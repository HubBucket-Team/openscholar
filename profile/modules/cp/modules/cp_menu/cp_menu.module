<?php

/**
 * @file
 * Cp menu customisations.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\vsite\Config\VsiteStorageDefinition;

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function cp_menu_group_insert(EntityInterface $entity) {
  if (!$entity->getGroupType()->hasContentPlugin('group_menu:menu')) {
    return;
  }

  $path = 'internal:' . $entity->path->alias;

  // This is needed to activate the vsite specific collection and store the
  // config in that vsite specific collection as it is not available by default
  // at this point.
  $hierarchical_storage = \Drupal::service('hierarchical.storage');
  $storage = $hierarchical_storage->createCollection('vsite:' . $entity->id());
  $hierarchical_storage->addStorage($storage, VsiteStorageDefinition::VSITE_STORAGE);

  $group_menu = \Drupal::entityTypeManager()->getStorage('menu')->create([
    'id' => 'menu-primary-' . $entity->id(),
    'label' => t('Primary menu'),
    'description' => t('Menu for %label', ['%label' => $entity->label()]),
  ]);
  $group_menu->save();

  $entityTypeManager = \Drupal::entityTypeManager();
  $group_menu_secondary = $entityTypeManager->getStorage('menu')->create([
    'id' => 'menu-secondary-' . $entity->id(),
    'label' => t('Secondary menu'),
    'description' => t('Menu for %label', ['%label' => $entity->label()]),
  ]);
  $group_menu_secondary->save();

  // Add menu link for group if enabled.
  $menu_content_storage = $entityTypeManager->getStorage('menu_link_content');
  $weight = 5;

  $menu_content_storage->create([
    'title' => t('Home'),
    'link' => ['uri' => $path],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();

  $menu_content_storage->create([
    'title' => t('Blog'),
    'link' => ['uri' => $path . '/blog', 'route_name' => 'entity.group.canonical'],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();
  $menu_content_storage->create([
    'title' => t('Calendar'),
    'link' => ['uri' => $path . '/calendar'],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();
  $menu_content_storage->create([
    'title' => t('Classes'),
    'link' => ['uri' => $path . '/classes'],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();
  $menu_content_storage->create([
    'title' => t('Links'),
    'link' => ['uri' => $path . '/links'],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();
  $menu_content_storage->create([
    'title' => t('News'),
    'link' => ['uri' => $path . '/news'],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();
  $menu_content_storage->create([
    'title' => t('People'),
    'link' => ['uri' => $path . '/people'],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();
  $menu_content_storage->create([
    'title' => t('Presentations'),
    'link' => ['uri' => $path . '/presentations'],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();
  $menu_content_storage->create([
    'title' => t('Projects'),
    'link' => ['uri' => $path . '/software'],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();
  $menu_content_storage->create([
    'title' => t('Publications'),
    'link' => ['uri' => $path . '/publications'],
    'menu_name' => $group_menu->id(),
    'weight' => $weight++,
    'expanded' => TRUE,
  ])->save();

  $entity->addContent($group_menu, 'group_menu:menu');
  $entity->addContent($group_menu_secondary, 'group_menu:menu');
  $menus = [
    $group_menu->id() => $group_menu->label(),
    $group_menu_secondary->id() => $group_menu_secondary->label(),
  ];
  $config = \Drupal::configFactory()->getEditable('cp_menu.settings');
  $config->set('menus', $menus)->save();
}
