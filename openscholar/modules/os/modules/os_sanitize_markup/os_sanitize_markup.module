<?php

function _ng_non_bindable(&$variables) {
  $ng_non_bindable = drupal_attributes(array(
    'ng-non-bindable' => 'true',
  ));

  if (strpos($variables['attributes'], 'ng-non-bindable') === FALSE) {
    $variables['attributes'] .= $ng_non_bindable;
  }
  if (strpos($variables['title_attributes'], 'ng-non-bindable') === FALSE) {
    $variables['title_attributes'] .= $ng_non_bindable;
  }
  if (strpos($variables['content_attributes'], 'ng-non-bindable') === FALSE) {
    $variables['content_attributes'] .= $ng_non_bindable;
  }
}

function _element_children_recursive(&$element, $form_state) {
  foreach (element_children($element) as $element_key) {
    $is_text_field = !empty($element[$element_key]['#type']) && in_array($element[$element_key]['#type'], array('container', 'fieldset', 'file', 'form', 'password', 'textarea', 'text_format', 'textfield'));
    $is_attributed_added = !empty($element[$element_key]['#attributes']) && isset($element[$element_key]['#attributes']['ng-non-bindable']);
    if ($is_text_field && !$is_attributed_added) {
      $element[$element_key]['#attributes']['ng-non-bindable'][] = 'true';
    }

    _element_children_recursive($element[$element_key], $form_state);
  }
}

function os_sanitize_markup_process_node(&$variables, $hook) {
  _ng_non_bindable($variables);
}

function os_sanitize_markup_process_block(&$variables, $hook) {
  _ng_non_bindable($variables);
}

function os_sanitize_markup_form_alter(&$form, $form_state, $form_id) {
  _element_children_recursive($form, $form_state);
}
