<?php

/**
 * @file
 * Pages app.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_entity_insert().
 *
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function os_pages_entity_insert(EntityInterface $entity) {
  /** @var \Drupal\os_pages\VisibilityHelper $visibility_helper */
  $visibility_helper = \Drupal::service('os_pages.visibility_helper');
  /** @var \Drupal\Core\Path\AliasManagerInterface $alias_manager */
  $alias_manager = \Drupal::service('path.alias_manager');
  /** @var \Drupal\os_pages\VisibilityStorageInterface $visibility_storage */
  $visibility_storage = \Drupal::service('os_pages.visibility_storage');

  if ($visibility_helper->shouldCreatePageVisibilityGroup($entity)) {
    $visibility_storage->create([
      'id' => "os_pages_page_{$entity->id()}",
      'label' => t('OS Pages: Page @name', [
        '@book_name' => $entity->label(),
      ]),
      'status' => TRUE,
      'allow_other_conditions' => TRUE,
      'logic' => 'and',
    ], [
      [
        'id' => 'entity_bundle:node',
        'bundles' => [
          'page' => $entity->bundle(),
        ],
        'negate' => FALSE,
      ],
      [
        'id' => 'request_path',
        'pages' => $alias_manager->getAliasByPath("/node/{$entity->id()}"),
        'negate' => 0,
      ],
    ]);
  }

  if ($visibility_helper->shouldCreateSectionVisibilityGroup($entity)) {
    /** @var \Drupal\node\NodeInterface $book */
    $book = Node::load($entity->book['bid']);

    $visibility_storage->create([
      'id' => "os_pages_section_{$book->id()}",
      'label' => t('OS Pages: Section @book_name', [
        '@book_name' => $book->label(),
      ]),
      'status' => TRUE,
      'allow_other_conditions' => TRUE,
      'logic' => 'and',
    ], [
      [
        'id' => 'entity_bundle:node',
        'bundles' => [
          'page' => $entity->bundle(),
        ],
        'negate' => FALSE,
      ],
      [
        'id' => 'request_path',
        'pages' => $alias_manager->getAliasByPath("/node/{$entity->id()}"),
        'negate' => 0,
      ],
    ]);
  }
}
