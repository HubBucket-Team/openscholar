<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\block\Entity\Block;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function os_widgets_form_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (!\Drupal::currentUser()->hasPermission('administer block classes')) {
    return;
  }

  /** @var \Drupal\block\BlockInterface $block */
  $block = $form_state->getFormObject()->getEntity();
  $block_content_id = $block->getPlugin()->getDerivativeId();
  if (empty($block_content_id)) {
    return;
  }
  $block_content = \Drupal::entityTypeManager()->getStorage('block_content')->loadByProperties(['uuid' => $block_content_id]);
  if (empty($block_content)) {
    return;
  }
  $blockContentBundle = reset($block_content)->bundle();
  if ($blockContentBundle != 'featured_posts') {
    return;
  }
  // This will automatically be saved in the third party settings.
  $form['third_party_settings']['#tree'] = TRUE;
  $form['third_party_settings']['os_widgets']['#title'] = new \Drupal\Core\StringTranslation\TranslatableMarkup('OpenScholar settings');
  $form['third_party_settings']['os_widgets']['#type'] = 'details';
  $form['third_party_settings']['os_widgets']['#group'] = 'visibility_tabs';
  $form['third_party_settings']['os_widgets']['display_style'] = [
    '#type' => 'select',
    '#title' => t('Display style'),
    '#options' => [
      'default' => t('Full Post'),
      'teaser' => t('Teaser'),
      'title' => t('Title'),
    ],
    '#default_value' => $block->getThirdPartySetting('os_widgets', 'display_style'),
  ];
  $form['third_party_settings']['os_widgets']['is_styled'] = [
    '#type' => 'checkbox',
    '#title' => t('Is styled'),
    '#description' => t('If checked, the markup will got an extra class name "styled"'),
    '#default_value' => $block->getThirdPartySetting('os_widgets', 'is_styled'),
  ];
  $form['third_party_settings']['os_widgets']['is_random'] = [
    '#type' => 'checkbox',
    '#title' => t('Display single random post'),
    '#description' => t('Displaying a single random post instead of a list of posts (consider cache layer)'),
    '#default_value' => $block->getThirdPartySetting('os_widgets', 'is_random'),
  ];
  $form['third_party_settings']['os_widgets']['hide_title'] = [
    '#type' => 'checkbox',
    '#title' => t('Hiding the title of the post'),
    '#description' => t('This option do nothing if the Display style set to Title.'),
    '#default_value' => $block->getThirdPartySetting('os_widgets', 'hide_title'),
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function os_widgets_preprocess_block(&$variables) {
  // Blocks coming from page manager widget does not have id.
  if (!empty($variables['elements']['#id'])) {
    $block = Block::load($variables['elements']['#id']);
    if ($block && $displayStyle = $block->getThirdPartySetting('os_widgets', 'display_style')) {
      $viewBuilder = \Drupal::entityTypeManager()->getViewBuilder('node');
      /** @var  $fieldItemsList \Drupal\Core\Field\EntityReferenceFieldItemList */
      $fieldItemsList = $variables['content']['field_featured_posts']['#items'];
      $referencedEntities = $fieldItemsList->referencedEntities();
      if ($displayStyle != 'title') {
        /**
         * @var  $delta int
         * @var  $node \Drupal\node\Entity\Node
         */
        foreach ($referencedEntities as $delta => $node) {
          $build = $viewBuilder->view($node, $displayStyle);
          $build['os_widgets_hide_node_title'] = $block->getThirdPartySetting('os_widgets', 'hide_title');
          $variables['content']['field_featured_posts'][$delta] = $build;
        }
      }
      if ($block->getThirdPartySetting('os_widgets', 'is_random')) {
        $displayedDelta = array_rand($referencedEntities);
        foreach ($referencedEntities as $delta => $node) {
          if ($displayedDelta != $delta) {
            // Hide other referenced entity
            $variables['content']['field_featured_posts'][$delta]['#access'] = false;
          }
        }
      }
    }
    if ($block && $block->getThirdPartySetting('os_widgets', 'is_styled')) {
      $variables['attributes']['class'][] = 'styled';
    }
  }
}

/**
 * Implements hook_preprocess_node().
 */
function os_widgets_preprocess_node(&$variables) {
  if (!empty($variables['elements']['os_widgets_hide_node_title'])) {
    $variables['label']['#access'] = false;
  }
}

