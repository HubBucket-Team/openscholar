--- a/auth/services_oauth/services_oauth.module
+++ b/auth/services_oauth/services_oauth.module
@@ -4,6 +4,9 @@
  * Implementation of hook_services_authentication().
  */
 function services_oauth_services_authentication_info() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_oauth_services_authentication_info\n");
+
   return array(
     'file'             => 'services_oauth.inc',
     'title'            => t('OAuth authentication'),
--- a/servers/rest_server/formats/xcal_format.module
+++ b/servers/rest_server/formats/xcal_format.module
@@ -1,6 +1,9 @@
 <?php
 
 function xcal_format_autoload_info() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " xcal_format_autoload_info\n");
+
   return array(
     'XCalFormatView' => array(
       'file' => 'XCalFormatView.inc',
@@ -9,6 +12,9 @@
 }
 
 function xcal_format_rest_server_response_formatters_alter(&$formatters) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " xcal_format_rest_server_response_formatters_alter\n");
+
   $formatters['xcal'] = array(
     'model' => 'ResourceTimeFeedModel',
     'mime types' => array('application/xcal+xml'),
--- a/servers/rest_server/rest_server.module
+++ b/servers/rest_server/rest_server.module
@@ -21,6 +21,9 @@
  * @return type
  */
 function rest_server_server() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " rest_server_server\n");
+
   $endpoint_path = services_get_server_info('endpoint_path', 'services/rest');
 
   $endpoint_path_len = drupal_strlen($endpoint_path) + 1;
@@ -45,6 +48,9 @@
  *  An associative array of parser callbacks keyed by mime-type.
  */
 function rest_server_request_parsers() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " rest_server_request_parsers\n");
+
   static $parsers = NULL;
   if (!$parsers) {
     $parsers = array(
@@ -77,6 +83,9 @@
  *  support for to be able to serve data in that format.
  */
 function rest_server_response_formatters() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " rest_server_response_formatters\n");
+
   static $formatters = NULL;
   if (!$formatters) {
     $formatters = array(
@@ -136,6 +145,9 @@
  *  The standardized settings array.
  */
 function rest_server_setup_settings($settings = array()) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " rest_server_setup_settings\n");
+
   // Apply defaults
   $settings = $settings + array(
     'formatters' => array('jsonp' => FALSE),
@@ -165,6 +177,9 @@
  * @return void
  */
 function _rest_server_add_default_and_remove_unknown(&$array, $keys, $default) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " _rest_server_add_default_and_remove_unknown\n");
+
   // Add default values to all keys that do not
   // exist in $array but exist in $keys.
   foreach ($keys as $k) {
@@ -185,6 +200,9 @@
  * Implements hook_services_resources_alter().
  */
 function rest_server_services_resources_alter(&$resources, $endpoint) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " rest_server_services_resources_alter\n");
+
   // Set the default models for the retrieve and index controllers in the node
   // resource if they are not already set.
   if (isset($resources['node'])) {
@@ -221,6 +239,9 @@
  * @note : Libraries 2.x
  */
 function rest_server_libraries_info() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " rest_server_libraries_info\n");
+
   $libraries['spyc'] = array(
     'name' => 'Spyc (A simple YAML loader/dumper class for PHP)',
     'vendor url' => 'https://code.google.com/p/spyc/',
--- a/servers/xmlrpc_server/xmlrpc_server.module
+++ b/servers/xmlrpc_server/xmlrpc_server.module
@@ -15,6 +15,9 @@
  * Implementation of hook_server_info().
  */
 function xmlrpc_server_server_info() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " xmlrpc_server_server_info\n");
+
   return array(
     'name' => 'XMLRPC',
   );
@@ -24,6 +27,9 @@
  * Implementation of hook_server().
  */
 function xmlrpc_server_server() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " xmlrpc_server_server\n");
+
   require_once './includes/xmlrpc.inc';
   require_once './includes/xmlrpcs.inc';
 
@@ -36,6 +42,9 @@
  * @see xmlrpc_server()
  */
 function xmlrpc_server_xmlrpc() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " xmlrpc_server_xmlrpc\n");
+
   $callbacks = array();
   module_load_include('inc', 'services', 'includes/services.runtime');
   $resources = services_get_resources(services_get_server_info('endpoint', ''));
@@ -58,6 +67,9 @@
  * the service in question.
  */
 function xmlrpc_server_call_wrapper() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " xmlrpc_server_call_wrapper\n");
+
   $xmlrpc_server = xmlrpc_server_get();
   $method_name = $xmlrpc_server->message->methodname;
   $args = func_get_args();
--- a/services.module
+++ b/services.module
@@ -14,6 +14,9 @@
  * Implements hook_help().
  */
 function services_help($path, $arg) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_help\n");
+
   $output = NULL;
 
   switch ($path) {
@@ -33,6 +36,9 @@
  * Implements hook_perm().
  */
 function services_permission() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_permission\n");
+
   return array(
     'administer services' => array(
       'title' => t('Administer services'),
@@ -72,6 +78,9 @@
  * Implements hook_hook_info().
  */
 function services_hook_info() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_hook_info\n");
+
   $hooks['services_resources'] = array(
     'group' => 'services',
   );
@@ -84,6 +93,9 @@
  * Services UI is defined in the export-ui plugin.
  */
 function services_menu() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_menu\n");
+
   $items = array();
   if (module_exists('ctools')) {
     $endpoints = services_endpoint_load_all();
@@ -105,6 +117,9 @@
  * Implements of hook_ctools_plugin_api().
  */
 function services_ctools_plugin_api($module, $api) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_ctools_plugin_api\n");
+
   if ($module == 'services' && $api == 'plugins') {
     return array('version' => 3);
   }
@@ -114,6 +129,9 @@
  * Implement of hook_ctools_plugin_directory().
  */
 function services_ctools_plugin_directory($module, $type) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_ctools_plugin_directory\n");
+
   // Safety: go away if CTools is not at an appropriate version.
   if (!module_invoke('ctools', 'api_version', SERVICES_REQUIRED_CTOOLS_API)) {
     return;
@@ -134,6 +152,9 @@
  * If you think you need it you are almost certainly wrong.
  */
 function services_access_menu() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_access_menu\n");
+
   return TRUE;
 }
 
@@ -141,6 +162,9 @@
  * Implements hook_theme().
  */
 function services_theme() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_theme\n");
+
   return array(
     'services_endpoint_index' => array(
       'template'  => 'services_endpoint_index',
@@ -161,6 +185,9 @@
  *  the installed server implementations.
  */
 function services_get_servers($reset = FALSE) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_get_servers\n");
+
   $servers = &drupal_static(__FUNCTION__);
 
   if (!$servers || $reset) {
@@ -183,6 +210,9 @@
  * @return void
  */
 function services_endpoint_callback($endpoint_name) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_endpoint_callback\n");
+
   module_load_include('inc', 'services', 'includes/services.runtime');
 
   // Explicitly set the title to avoid expensive menu calls in token
@@ -226,6 +256,9 @@
  *  An endpoint initialized with the default values.
  */
 function services_endpoint_new() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_endpoint_new\n");
+
   ctools_include('export');
   return ctools_export_new_object('services_endpoint');
 }
@@ -239,6 +272,9 @@
  *  The endpoint configuration.
  */
 function services_endpoint_load($name) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_endpoint_load\n");
+
   ctools_include('export');
   $result = ctools_export_load_object('services_endpoint', 'names', array($name));
   if (isset($result[$name])) {
@@ -254,6 +290,9 @@
  *  Array of endpoint objects keyed by endpoint names.
  */
 function services_endpoint_load_all() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_endpoint_load_all\n");
+
   ctools_include('export');
   return ctools_export_load_object('services_endpoint');
 }
@@ -264,6 +303,9 @@
  * @return void
  */
 function services_endpoint_save($endpoint) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_endpoint_save\n");
+
   if (is_array($endpoint) && isset($endpoint['build_info'])) {
     $endpoint = $endpoint['build_info']['args'][0];
   }
@@ -287,6 +329,9 @@
  * @return void
  */
 function services_endpoint_delete($endpoint) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_endpoint_delete\n");
+
   ctools_export_crud_delete('services_endpoint', $endpoint);
   ctools_export_load_object_reset('services_endpoint');
   menu_rebuild();
@@ -299,6 +344,9 @@
  * @return string
  */
 function services_endpoint_export($endpoint, $indent = '') {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_endpoint_export\n");
+
   ctools_include('export');
   return ctools_export_object('services_endpoint', $endpoint, $indent);
 }
@@ -313,6 +361,9 @@
  *  An array containing all resources.
  */
 function services_get_resources($endpoint_name = '') {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_get_resources\n");
+
   $cache_key = 'services:' . $endpoint_name . ':resources';
 
   $resources = array();
@@ -340,6 +391,9 @@
  *  version number.
  */
 function services_resource_api_version_info() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_resource_api_version_info\n");
+
   $info = array(
     'default_version' => 3001,
     'versions' => array(3002),
@@ -352,6 +406,9 @@
  * Implements hook_services_resources().
  */
 function services_services_resources() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_services_resources\n");
+
   module_load_include('inc', 'services', 'includes/services.resource_build');
   // Return resources representing legacy services
   return _services_core_resources();
@@ -361,6 +418,9 @@
  * Implementation of hook_services_authentication_info().
  */
 function services_services_authentication_info() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_services_authentication_info\n");
+
   return array(
     'title'             => t('Session authentication'),
     'description'       => t("Uses Drupal's built in sessions to authenticate."),
@@ -374,6 +434,9 @@
  * @return void
  */
 function _services_sessions_authenticate_call() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " _services_sessions_authenticate_call\n");
+
   $arg = func_get_args();
   global $user;
   $original_user = services_get_server_info('original_user');
@@ -386,6 +449,9 @@
  * @return array An array with operation class information keyed by operation machine name.
  */
 function services_operation_class_info() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_operation_class_info\n");
+
   return array(
     'operations' => array(
       'title' => t('CRUD operations'),
@@ -419,6 +485,9 @@
  *  An array containing all controller names.
  */
 function services_controllers_list($endpoint) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_controllers_list\n");
+
   $controllers = array();
   $class_info = services_operation_class_info();
 
@@ -455,6 +524,9 @@
  *  The endpoint that should be used.
  */
 function services_controller_get($name, $endpoint) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_controller_get\n");
+
   list($resource_name, $method) = explode('.', $name);
 
   $resources = services_get_resources($endpoint);
@@ -483,6 +555,9 @@
  *   Otherwise, array().
  */
 function services_get_updates() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_get_updates\n");
+
   $updates = &drupal_static(__FUNCTION__, array());
   if (!isset($updates) || empty($updates)) {
     $updates = array();
@@ -528,6 +603,9 @@
  * returns false if no version is present in the header for the specific call.
  */
 function _services_version_header_options() {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " _services_version_header_options\n");
+
   $available_headers = array();
   $updates = services_get_updates();
   if(is_array($updates)) {
@@ -558,6 +636,9 @@
  *   an array with the major and minor api versions
  */
 function services_get_resource_api_version($endpoint, $resource, $method) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_get_resource_api_version\n");
+
   if (isset($endpoint->resources[$resource]) ) {
     $class_info = services_operation_class_info();
     foreach ($class_info as $class_name => $class) {
@@ -589,6 +670,9 @@
  *   An array with the major and minor api versions
  */
 function services_request_apply_version(&$controller, $options = array()) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_request_apply_version\n");
+
   if (isset($options)) {
     extract($options);
   }
@@ -631,6 +715,9 @@
  *   An array of RPC method definitions
  */
 function services_resources_as_procedures($resource, $resource_name) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_resources_as_procedures\n");
+
   $methods = array();
   $class_info = services_operation_class_info();
   foreach ($class_info as $class_name => $class) {
@@ -672,6 +759,9 @@
  *   String name of the resource building the index query
  */
 function services_resource_build_index_query($query, $page, $fields, $parameters, $page_size, $resource) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_resource_build_index_query\n");
+
   $default_limit = variable_get("services_{$resource}_index_page_size", 20);
   if (!user_access('perform unlimited index queries') && $page_size > $default_limit) {
     $page_size = $default_limit;
@@ -697,6 +787,9 @@
  * @ingroup php_wrappers
  */
 function services_str_getcsv($input, $delimiter = ',', $enclosure = '"', $escape = '\\') {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_str_getcsv\n");
+
   $ret = array();
 
   if (!function_exists('str_getcsv')) {
@@ -724,6 +817,9 @@
  *   String field to use for looking up uri.
  */
 function services_resource_build_index_list($results, $type, $field) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_resource_build_index_list\n");
+
   // Put together array of matching items to return.
   $items = array();
   foreach ($results as $result) {
@@ -746,6 +842,9 @@
  *    Object user object.
  */
 function services_remove_user_data(&$account) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_remove_user_data\n");
+
   // Remove the users password from the account object.
   unset($account->pass);
   if (!user_access('administer users')) {
@@ -762,6 +861,9 @@
  *   Object dbtng query object.
  */
 function services_resource_execute_index_query($query) {
+
+  error_log("EAM Entering " . __FILE__ . ":" . __LINE__ . " services_resource_execute_index_query\n");
+
   try {
     return $query->execute();
   }
